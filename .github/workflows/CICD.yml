#https://daniel-vetter86.medium.com/building-a-ci-cd-pipeline-with-asp-net-core-github-actions-docker-and-a-linux-server-3fc5271ebbe4
#https://event-driven.io/en/how_to_buid_and_push_docker_image_with_github_actions/
#https://gist.github.com/sagikazarmark/0119e1f3dde0d8e755fd0ee5a5ef4cdc
name: CI/CD

on: 
  push: 
    branches: 
      - main
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
env:
  REGISTRY: vanbassum
  IMAGE_NAME: imageimporter
  
jobs:
  build:
    name: Building image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Calculate Docker image tags
        id: tags
        env:
          DOCKER_IMAGES: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        run: |
          case $GITHUB_REF in
            refs/tags/*)  VERSION=${GITHUB_REF#refs/tags/};;
            refs/heads/*) VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g');;
            refs/pull/*)  VERSION=pr-${{ github.event.number }};;
            *)            VERSION=sha-${GITHUB_SHA::8};;
          esac
          TAGS=()
          for image in $DOCKER_IMAGES; do
            TAGS+=("${image}:${VERSION}")
            if [[ "${{ github.event.repository.default_branch }}" == "$VERSION" ]]; then
              TAGS+=("${image}:latest")
            fi
            TAGS+=("${image}:${github.sha::8}")
          done
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::$(IFS=,; echo "${TAGS[*]}")
          echo ::set-output name=commit_hash::${GITHUB_SHA::8}
          echo ::set-output name=build_date::$(git show -s --format=%cI)
          
      - name: Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
    
      - name: DockerHub login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Extract metadata for the Docker image
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.tags.outputs.version }}
            org.opencontainers.image.created=${{ steps.tags.outputs.build_date }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
          
